org.gaminganywhere.gaclient.GAClient -> org.gaminganywhere.gaclient.GAClient:
    android.content.Context context -> a
    android.app.Activity activity -> b
    android.view.Surface surface -> c
    android.view.SurfaceView surfaceView -> d
    android.os.Handler handler -> e
    java.util.HashMap gaconfig -> f
    int audioSamplerate -> g
    int audioChannels -> h
    int screenWidth -> i
    int screenHeight -> j
    boolean quitWatchdog -> k
    int watchdogTick -> l
    java.lang.Thread watchdogThread -> m
    int watchdogTimeout -> n
    android.media.MediaFormat audioFormat -> o
    android.media.MediaFormat videoFormat -> p
    android.media.MediaCodec adecoder -> q
    android.media.MediaCodec vdecoder -> r
    java.nio.ByteBuffer[] inputVBuffers -> s
    java.nio.ByteBuffer[] inputABuffers -> t
    int audioTrackMinBufSize -> u
    android.media.AudioTrack audioTrack -> v
    boolean videoRendered -> w
    boolean quitAudioRenderer -> x
    boolean quitVideoRenderer -> y
    java.lang.Thread audioRendererThread -> z
    java.lang.Thread videoRendererThread -> A
    java.lang.Thread rtspThread -> B
    boolean builtinAudioDecoder -> C
    boolean builtinVideoDecoder -> D
    int currAInbufIdx -> E
    long currAPts -> F
    int currVInbufIdx -> G
    long currVPts -> H
    int currVFlag -> I
    void <init>() -> <init>
    void setContext(android.content.Context) -> a
    void setActivity(android.app.Activity) -> a
    void setSurface(android.view.Surface) -> a
    void setSurfaceView(android.view.SurfaceView) -> a
    void setHandler(android.os.Handler) -> a
    void setScreenDimension(int,int) -> setScreenDimension
    int getScreenWidth() -> a
    int getScreenHeight() -> b
    boolean profileLoad(java.lang.String) -> a
    boolean watchdogSetTimeout(int) -> a
    void watchdogThreadProc() -> k
    boolean startWatchdog() -> c
    void stopWatchdog() -> d
    void kickWatchdog() -> kickWatchdog
    void audioRenderSoftware() -> l
    void audioRenderBuiltin() -> m
    void audioRenderThreadProc() -> n
    void videoRendererThreadProc() -> o
    java.lang.Thread stopRenderer(java.lang.Thread) -> a
    boolean startAudioRenderer() -> p
    void stopAudioRenderer() -> q
    boolean startVideoRenderer() -> r
    void stopVideoRenderer() -> s
    void startRTSPClient() -> e
    void stopRTSPClient() -> f
    void showToast(java.lang.String) -> showToast
    void goBack(int) -> goBack
    void requestRender() -> requestRender
    java.lang.Object initAudio(java.lang.String,int,int,boolean) -> initAudio
    android.media.MediaCodec startAudioDecoder() -> startAudioDecoder
    int decodeAudio(byte[],int,long,int) -> decodeAudio
    void stopAudioDecoder() -> g
    void stopAudio() -> h
    android.media.MediaFormat initVideo(java.lang.String,int,int) -> initVideo
    android.media.MediaFormat videoSetByteBuffer(java.lang.String,byte[],int) -> videoSetByteBuffer
    android.media.MediaCodec startVideoDecoder() -> startVideoDecoder
    int decodeVideo(byte[],int,long,boolean,int) -> decodeVideo
    void stopVideoDecoder() -> i
    boolean initGAClient(java.lang.Object) -> initGAClient
    void resetConfig() -> resetConfig
    void setProtocol(java.lang.String) -> setProtocol
    void setHost(java.lang.String) -> setHost
    void setPort(int) -> setPort
    void setObjectPath(java.lang.String) -> setObjectPath
    void setRTPOverTCP(boolean) -> setRTPOverTCP
    void setCtrlEnable(boolean) -> setCtrlEnable
    void setCtrlProtocol(boolean) -> setCtrlProtocol
    void setCtrlPort(int) -> setCtrlPort
    void setBuiltinAudioInternal(boolean) -> setBuiltinAudioInternal
    void setBuiltinAudio(boolean) -> a
    void setBuiltinVideoInternal(boolean) -> setBuiltinVideoInternal
    void setBuiltinVideo(boolean) -> b
    void setAudioCodec(int,int) -> setAudioCodec
    void setDropLateVideoFrame(int) -> setDropLateVideoFrame
    void sendKeyEvent(boolean,int,int,int,int) -> sendKeyEvent
    void sendMouseKey(boolean,int,int,int) -> sendMouseKey
    void sendMouseMotion(int,int,int,int,int,boolean) -> sendMouseMotion
    void GLresize(int,int) -> GLresize
    boolean GLrenderInternal() -> GLrenderInternal
    boolean GLrender() -> j
    int audioBufferFill(byte[],int) -> audioBufferFill
    boolean rtspConnect() -> rtspConnect
    void rtspDisconnect() -> rtspDisconnect
    void access$000(org.gaminganywhere.gaclient.GAClient) -> a
    void access$100(org.gaminganywhere.gaclient.GAClient) -> b
    void access$200(org.gaminganywhere.gaclient.GAClient) -> c
    void <clinit>() -> <clinit>
org.gaminganywhere.gaclient.GAClient$1 -> org.gaminganywhere.gaclient.a:
    org.gaminganywhere.gaclient.GAClient this$0 -> a
    void <init>(org.gaminganywhere.gaclient.GAClient) -> <init>
    void run() -> run
org.gaminganywhere.gaclient.GAClient$2 -> org.gaminganywhere.gaclient.b:
    org.gaminganywhere.gaclient.GAClient this$0 -> a
    void <init>(org.gaminganywhere.gaclient.GAClient) -> <init>
    void run() -> run
org.gaminganywhere.gaclient.GAClient$3 -> org.gaminganywhere.gaclient.c:
    org.gaminganywhere.gaclient.GAClient this$0 -> a
    void <init>(org.gaminganywhere.gaclient.GAClient) -> <init>
    void run() -> run
org.gaminganywhere.gaclient.GAClient$4 -> org.gaminganywhere.gaclient.d:
    org.gaminganywhere.gaclient.GAClient this$0 -> a
    void <init>(org.gaminganywhere.gaclient.GAClient) -> <init>
    void run() -> run
org.gaminganywhere.gaclient.GAConfigHelper -> org.gaminganywhere.gaclient.e:
    java.lang.String[] fields -> a
    java.util.ArrayList profileLoadSummary(android.content.Context) -> a
    java.util.HashMap profileLoad(android.content.Context,java.lang.String) -> a
    boolean profileSave(android.content.Context,java.lang.String,java.util.HashMap,boolean) -> a
    boolean profileDelete(android.content.Context,java.lang.String) -> b
    boolean profileRename(android.content.Context,java.lang.String,java.lang.String) -> a
    void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int) -> <init>
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void <clinit>() -> <clinit>
org.gaminganywhere.gaclient.MainActivity -> org.gaminganywhere.gaclient.MainActivity:
    java.util.List profile_list -> a
    android.widget.Spinner spinner_profile -> b
    android.widget.Button btn_connect -> c
    android.widget.CheckBox cb_builtin_audio -> d
    android.widget.CheckBox cb_builtin_video -> e
    android.widget.CheckBox cb_portrait_mode -> f
    android.widget.CheckBox cb_drop_late_vframe -> g
    android.widget.SeekBar sb_drop_late_vframe -> h
    android.widget.CheckBox cb_watchdog_timeout -> i
    android.widget.SeekBar sb_watchdog_timeout -> j
    int[] watchdog_timeouts -> k
    android.widget.Spinner spinner_control -> l
    java.util.ArrayList list_control -> m
    android.widget.Button btn_padsetup -> n
    int lastSelection -> o
    void <init>() -> <init>
    void showToast(java.lang.String) -> a
    void profileLoad() -> c
    void profileRename() -> d
    void profileDelete() -> e
    void profileConnect() -> f
    void profileEdit(boolean) -> a
    void onCreate(android.os.Bundle) -> onCreate
    int getWatchdogTimeout() -> a
    int getDropLateVFrameDelay() -> b
    void onResume() -> onResume
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onClick(android.view.View) -> onClick
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    android.widget.Spinner access$000(org.gaminganywhere.gaclient.MainActivity) -> a
    void access$100(org.gaminganywhere.gaclient.MainActivity,java.lang.String) -> a
    void access$200(org.gaminganywhere.gaclient.MainActivity) -> b
org.gaminganywhere.gaclient.MainActivity$1 -> org.gaminganywhere.gaclient.f:
    android.widget.EditText val$editor -> a
    org.gaminganywhere.gaclient.MainActivity this$0 -> b
    void <init>(org.gaminganywhere.gaclient.MainActivity,android.widget.EditText) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
org.gaminganywhere.gaclient.MainActivity$2 -> org.gaminganywhere.gaclient.g:
    org.gaminganywhere.gaclient.MainActivity this$0 -> a
    void <init>(org.gaminganywhere.gaclient.MainActivity) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
org.gaminganywhere.gaclient.MainActivity$Profile -> org.gaminganywhere.gaclient.h:
    java.lang.String title -> a
    java.lang.String desc -> b
    org.gaminganywhere.gaclient.MainActivity this$0 -> c
    void <init>(org.gaminganywhere.gaclient.MainActivity,java.lang.String,java.lang.String) -> <init>
org.gaminganywhere.gaclient.MainActivity$ProfileAdapter -> org.gaminganywhere.gaclient.i:
    org.gaminganywhere.gaclient.MainActivity this$0 -> a
    void <init>(org.gaminganywhere.gaclient.MainActivity,android.content.Context,int,java.util.List) -> <init>
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View initView(int,android.view.View) -> a
org.gaminganywhere.gaclient.PlayerActivity -> org.gaminganywhere.gaclient.PlayerActivity:
    android.os.PowerManager$WakeLock mWakeLock -> a
    org.gaminganywhere.gaclient.GAClient client -> b
    android.view.Surface surface -> c
    android.os.Handler handler -> d
    boolean builtinVideo -> e
    int viewWidth -> f
    int viewHeight -> g
    android.widget.FrameLayout topLayout -> h
    org.gaminganywhere.gaclient.util.GAController controller -> i
    android.view.SurfaceView contentView -> j
    int frames -> k
    long lastFPSt -> l
    void <init>() -> <init>
    void myHandler(android.os.Message) -> a
    void showToast(java.lang.String) -> a
    void connect(android.view.Surface) -> a
    void disconnect() -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onBackPressed() -> onBackPressed
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void access$000(org.gaminganywhere.gaclient.PlayerActivity,android.os.Message) -> a
org.gaminganywhere.gaclient.PlayerActivity$1 -> org.gaminganywhere.gaclient.j:
    org.gaminganywhere.gaclient.PlayerActivity this$0 -> a
    void <init>(org.gaminganywhere.gaclient.PlayerActivity) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
org.gaminganywhere.gaclient.R -> org.gaminganywhere.gaclient.R:
    void <init>() -> <init>
org.gaminganywhere.gaclient.R$array -> org.gaminganywhere.gaclient.R$array:
    int audio_channels -> audio_channels
    int audio_samplerate -> audio_samplerate
    int codec_audio -> codec_audio
    int codec_video -> codec_video
    int protocol_main -> protocol_main
    int protocol_transport -> protocol_transport
    void <init>() -> <init>
    void <clinit>() -> <clinit>
org.gaminganywhere.gaclient.R$attr -> org.gaminganywhere.gaclient.R$attr:
    int buttonBarButtonStyle -> buttonBarButtonStyle
    int buttonBarStyle -> buttonBarStyle
    void <init>() -> <init>
    void <clinit>() -> <clinit>
org.gaminganywhere.gaclient.R$color -> org.gaminganywhere.gaclient.R$color:
    int black_overlay -> black_overlay
    void <init>() -> <init>
    void <clinit>() -> <clinit>
org.gaminganywhere.gaclient.R$dimen -> org.gaminganywhere.gaclient.R$dimen:
    int activity_horizontal_margin -> activity_horizontal_margin
    int activity_vertical_margin -> activity_vertical_margin
    void <init>() -> <init>
    void <clinit>() -> <clinit>
org.gaminganywhere.gaclient.R$drawable -> org.gaminganywhere.gaclient.R$drawable:
    int ic_launcher -> ic_launcher
    int mouse32 -> mouse32
    int psp_circle -> psp_circle
    int psp_cross -> psp_cross
    int psp_rect -> psp_rect
    int psp_triangle -> psp_triangle
    void <init>() -> <init>
    void <clinit>() -> <clinit>
org.gaminganywhere.gaclient.R$id -> org.gaminganywhere.gaclient.R$id:
    int LayoutMain -> LayoutMain
    int action_connect -> action_connect
    int action_delete -> action_delete
    int action_edit -> action_edit
    int action_new -> action_new
    int action_rename -> action_rename
    int button_connect -> button_connect
    int button_padsetup -> button_padsetup
    int cb_builtin_audio -> cb_builtin_audio
    int cb_builtin_video -> cb_builtin_video
    int cb_drop_late_vframe -> cb_drop_late_vframe
    int cb_portrait_mode -> cb_portrait_mode
    int cb_watchdog_timeout -> cb_watchdog_timeout
    int sb_drop_late_frame -> sb_drop_late_frame
    int sb_watchdog_timeout -> sb_watchdog_timeout
    int spinner_control -> spinner_control
    int spinner_profile -> spinner_profile
    int tv_controller -> tv_controller
    int tv_profile -> tv_profile
    void <init>() -> <init>
    void <clinit>() -> <clinit>
org.gaminganywhere.gaclient.R$layout -> org.gaminganywhere.gaclient.R$layout:
    int activity_main -> activity_main
    void <init>() -> <init>
    void <clinit>() -> <clinit>
org.gaminganywhere.gaclient.R$menu -> org.gaminganywhere.gaclient.R$menu:
    int main -> main
    void <init>() -> <init>
    void <clinit>() -> <clinit>
org.gaminganywhere.gaclient.R$string -> org.gaminganywhere.gaclient.R$string:
    int action_settings -> action_settings
    int app_name -> app_name
    int dummy_button -> dummy_button
    int dummy_content -> dummy_content
    int title_activity_player -> title_activity_player
    void <init>() -> <init>
    void <clinit>() -> <clinit>
org.gaminganywhere.gaclient.R$style -> org.gaminganywhere.gaclient.R$style:
    int AppBaseTheme -> AppBaseTheme
    int AppTheme -> AppTheme
    int ButtonBar -> ButtonBar
    int ButtonBarButton -> ButtonBarButton
    int FullscreenActionBarStyle -> FullscreenActionBarStyle
    int FullscreenTheme -> FullscreenTheme
    void <init>() -> <init>
    void <clinit>() -> <clinit>
org.gaminganywhere.gaclient.R$styleable -> org.gaminganywhere.gaclient.R$styleable:
    int[] ButtonBarContainerTheme -> ButtonBarContainerTheme
    int ButtonBarContainerTheme_buttonBarButtonStyle -> ButtonBarContainerTheme_buttonBarButtonStyle
    int ButtonBarContainerTheme_buttonBarStyle -> ButtonBarContainerTheme_buttonBarStyle
    void <init>() -> <init>
    void <clinit>() -> <clinit>
org.gaminganywhere.gaclient.R$xml -> org.gaminganywhere.gaclient.R$xml:
    int preference_profile -> preference_profile
    void <init>() -> <init>
    void <clinit>() -> <clinit>
org.gaminganywhere.gaclient.SettingsActivity -> org.gaminganywhere.gaclient.SettingsActivity:
    org.gaminganywhere.gaclient.SettingsFragment fragment -> a
    java.lang.String currProfile -> b
    void <init>() -> <init>
    void showToast(java.lang.String) -> a
    void goBack() -> a
    void doResume() -> b
    void onCreate(android.os.Bundle) -> onCreate
    int findPreferenceOrder(android.preference.PreferenceScreen,int,java.lang.String) -> a
    void onBackPressed() -> onBackPressed
    void onPause() -> onPause
    void onResume() -> onResume
    java.lang.String access$000(org.gaminganywhere.gaclient.SettingsActivity) -> a
    org.gaminganywhere.gaclient.SettingsFragment access$100(org.gaminganywhere.gaclient.SettingsActivity) -> b
org.gaminganywhere.gaclient.SettingsActivity$1 -> org.gaminganywhere.gaclient.k:
    org.gaminganywhere.gaclient.SettingsActivity this$0 -> a
    void <init>(org.gaminganywhere.gaclient.SettingsActivity) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
org.gaminganywhere.gaclient.SettingsActivity$2 -> org.gaminganywhere.gaclient.l:
    org.gaminganywhere.gaclient.SettingsActivity this$0 -> a
    void <init>(org.gaminganywhere.gaclient.SettingsActivity) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
org.gaminganywhere.gaclient.SettingsActivity$3 -> org.gaminganywhere.gaclient.m:
    org.gaminganywhere.gaclient.SettingsActivity this$0 -> a
    void <init>(org.gaminganywhere.gaclient.SettingsActivity) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
org.gaminganywhere.gaclient.SettingsFragment -> org.gaminganywhere.gaclient.n:
    java.lang.String current_profile -> a
    android.content.Context context -> b
    boolean modified -> c
    boolean isUpdate -> d
    void <init>() -> <init>
    void showToast(java.lang.String) -> c
    void setProfile(java.lang.String) -> a
    void setContext(android.content.Context) -> a
    boolean isModified() -> a
    void profileConfigListPreference(java.lang.String,java.lang.String,java.lang.Object) -> a
    void profileConfigEditTextPreference(java.lang.String,java.lang.String,java.lang.Object,int) -> a
    void profileConfigCheckBoxPreference(java.lang.String,boolean) -> a
    void profileLoadDefault() -> b
    boolean profileLoad(java.lang.String) -> b
    boolean profileSave() -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
org.gaminganywhere.gaclient.util.GAController -> org.gaminganywhere.gaclient.a.a:
    android.content.Context context -> a
    org.gaminganywhere.gaclient.GAClient client -> b
    int viewWidth -> c
    int viewHeight -> d
    float mappedX -> e
    float mappedY -> f
    float mappedDeltaX -> g
    float mappedDeltaY -> h
    android.widget.RelativeLayout relativeLayout -> i
    android.widget.ImageView panel -> j
    android.widget.ImageView cursor -> k
    boolean showMouse -> l
    boolean enableTouchClick -> m
    float mouseX -> n
    float mouseY -> o
    long clickDetectionTime -> p
    float clickDetectionDist -> q
    float lastX -> r
    float lastY -> s
    float initX -> t
    float initY -> u
    long lastTouchTime -> v
    void <init>(android.content.Context) -> <init>
    android.content.Context getContext() -> a
    android.widget.ImageView getPanel() -> b
    void finish() -> c
    void setClient(org.gaminganywhere.gaclient.GAClient) -> a
    android.view.View getView() -> d
    void onDimensionChange(int,int) -> a
    void setViewDimension(int,int) -> b
    int getViewWidth() -> e
    int getViewHeight() -> f
    boolean mapCoordinate(float,float) -> b
    boolean mapCoordinate(float,float,float,float) -> a
    void moveView(android.view.View,int,int,int,int) -> a
    void placeView(android.view.View,int,int,int,int) -> b
    android.widget.Button newButton(java.lang.String,int,int,int,int) -> a
    android.widget.ImageButton newImageButton(int,int,int,int) -> a
    boolean handleButtonTouch(int,int,int,int,int) -> a
    void setMouseVisibility(boolean) -> a
    float getMouseX() -> g
    float getMouseY() -> h
    void moveMouse(float,float) -> a
    void drawCursor(int,int) -> c
    void sendKeyEvent(boolean,int,int,int,int) -> a
    void sendMouseKey(boolean,int,float,float) -> a
    void sendMouseMotion(float,float,float,float,int,boolean) -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
org.gaminganywhere.gaclient.util.GAControllerBasic -> org.gaminganywhere.gaclient.a.b:
    android.widget.Button buttonEsc -> a
    org.gaminganywhere.gaclient.util.Pad padLeft -> b
    int mouseButton -> c
    void <init>(android.content.Context) -> <init>
    java.lang.String getName() -> i
    java.lang.String getDescription() -> j
    void onDimensionChange(int,int) -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void emulateMouseButtons(int,int) -> d
    void onPartitionEvent(android.view.View,int,int) -> a
    void onClick(android.view.View) -> onClick
org.gaminganywhere.gaclient.util.GAControllerDualPad -> org.gaminganywhere.gaclient.a.c:
    android.widget.Button buttonEsc -> a
    android.widget.Button buttonBack -> b
    org.gaminganywhere.gaclient.util.Pad padLeft -> c
    org.gaminganywhere.gaclient.util.Pad padRight -> d
    boolean keyLeft -> e
    boolean keyRight -> f
    boolean keyUp -> g
    boolean keyDown -> h
    int mouseButton -> i
    void <init>(android.content.Context) -> <init>
    java.lang.String getName() -> i
    java.lang.String getDescription() -> j
    void onDimensionChange(int,int) -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void onClick(android.view.View) -> onClick
    void emulateArrowKeys(int,int) -> d
    void emulateMouseButtons(int,int) -> e
    void onPartitionEvent(android.view.View,int,int) -> a
org.gaminganywhere.gaclient.util.GAControllerEmpty -> org.gaminganywhere.gaclient.a.d:
    void <init>(android.content.Context) -> <init>
    java.lang.String getName() -> i
    java.lang.String getDescription() -> j
    void onDimensionChange(int,int) -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void onPartitionEvent(android.view.View,int,int) -> a
    void onClick(android.view.View) -> onClick
org.gaminganywhere.gaclient.util.GAControllerLimbo -> org.gaminganywhere.gaclient.a.e:
    android.widget.Button buttonEsc -> a
    android.widget.Button buttonBack -> b
    org.gaminganywhere.gaclient.util.Pad padLeft -> c
    org.gaminganywhere.gaclient.util.Pad padRight -> d
    boolean keyLeft -> e
    boolean keyRight -> f
    boolean keyUp -> g
    boolean keyDown -> h
    int lastKey -> i
    int lastScan -> j
    void <init>(android.content.Context) -> <init>
    java.lang.String getName() -> i
    java.lang.String getDescription() -> j
    void onDimensionChange(int,int) -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void onClick(android.view.View) -> onClick
    void emulateArrowKeys(int,int) -> d
    void emulateMouseButtons(int,int) -> e
    void onPartitionEvent(android.view.View,int,int) -> a
org.gaminganywhere.gaclient.util.GAControllerN64 -> org.gaminganywhere.gaclient.a.f:
    android.widget.Button buttonEsc -> a
    android.widget.Button buttonBack -> b
    android.widget.Button buttonStart -> c
    org.gaminganywhere.gaclient.util.Pad padLeft -> d
    org.gaminganywhere.gaclient.util.Pad padRight -> e
    android.widget.Button buttonL -> f
    android.widget.Button buttonR -> g
    android.widget.Button buttonA -> h
    android.widget.Button buttonB -> i
    android.widget.Button buttonZ -> j
    boolean keyLeft -> k
    boolean keyRight -> l
    boolean keyUp -> m
    boolean keyDown -> n
    int lastScan -> o
    int lastKey -> p
    void <init>(android.content.Context) -> <init>
    java.lang.String getName() -> i
    java.lang.String getDescription() -> j
    void onDimensionChange(int,int) -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void emulateArrowKeys(int,int) -> d
    void emulateDPad(int,int) -> e
    void onPartitionEvent(android.view.View,int,int) -> a
    void onClick(android.view.View) -> onClick
org.gaminganywhere.gaclient.util.GAControllerNDS -> org.gaminganywhere.gaclient.a.g:
    android.widget.Button buttonL -> f
    android.widget.Button buttonR -> g
    android.widget.Button buttonToggleLPad -> h
    android.widget.Button buttonToggleRPad -> i
    android.widget.Button buttonToggleLRBtn -> j
    android.widget.Button buttonEsc -> k
    android.widget.Button buttonBack -> l
    android.widget.Button buttonSelect -> m
    android.widget.Button buttonStart -> n
    org.gaminganywhere.gaclient.util.Pad padLeft -> o
    android.widget.Button buttonA -> p
    android.widget.Button buttonB -> q
    android.widget.Button buttonX -> r
    android.widget.Button buttonY -> s
    int currWidth -> a
    int currHeight -> b
    boolean showLPad -> c
    boolean showRPad -> d
    boolean showLRBtn -> e
    float lastX -> t
    float lastY -> u
    int lastButton -> v
    boolean keyLeft -> w
    boolean keyRight -> x
    boolean keyUp -> y
    boolean keyDown -> z
    void <init>(android.content.Context) -> <init>
    java.lang.String getName() -> i
    java.lang.String getDescription() -> j
    void onDimensionChange(int,int) -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void emulateArrowKeys(int,int) -> d
    void onPartitionEvent(android.view.View,int,int) -> a
    void onClick(android.view.View) -> onClick
org.gaminganywhere.gaclient.util.GAControllerPSP -> org.gaminganywhere.gaclient.a.h:
    android.widget.Button buttonEsc -> a
    android.widget.Button buttonBack -> b
    android.widget.Button buttonSelect -> c
    android.widget.Button buttonStart -> d
    org.gaminganywhere.gaclient.util.Pad padLeft -> e
    android.widget.Button buttonL -> f
    android.widget.Button buttonR -> g
    android.widget.ImageButton buttonOval -> h
    android.widget.ImageButton buttonCross -> i
    android.widget.ImageButton buttonRect -> j
    android.widget.ImageButton buttonTri -> k
    float lastX -> l
    float lastY -> m
    int lastButton -> n
    boolean keyLeft -> o
    boolean keyRight -> p
    boolean keyUp -> q
    boolean keyDown -> r
    void <init>(android.content.Context) -> <init>
    java.lang.String getName() -> i
    java.lang.String getDescription() -> j
    void onDimensionChange(int,int) -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void emulateArrowKeys(int,int) -> d
    void onPartitionEvent(android.view.View,int,int) -> a
    void onClick(android.view.View) -> onClick
org.gaminganywhere.gaclient.util.GAControllerPadABXY -> org.gaminganywhere.gaclient.a.i:
    android.widget.Button buttonEsc -> a
    android.widget.Button buttonBack -> b
    android.widget.Button buttonSelect -> c
    android.widget.Button buttonStart -> d
    org.gaminganywhere.gaclient.util.Pad padLeft -> e
    org.gaminganywhere.gaclient.util.Pad padRight -> f
    boolean keyLeft -> g
    boolean keyRight -> h
    boolean keyUp -> i
    boolean keyDown -> j
    int lastButton -> k
    int lastScan -> l
    int lastKey -> m
    void <init>(android.content.Context) -> <init>
    java.lang.String getName() -> i
    void onDimensionChange(int,int) -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void emulateArrowKeys(int,int) -> d
    void emulateABXZ(int,int) -> e
    void onPartitionEvent(android.view.View,int,int) -> a
    void onClick(android.view.View) -> onClick
org.gaminganywhere.gaclient.util.Pad -> org.gaminganywhere.gaclient.a.j:
    android.graphics.Paint paint -> a
    int currWidth -> b
    int currHeight -> c
    int currRadius -> d
    int centerX -> e
    int centerY -> f
    boolean touched -> g
    float touchedX -> h
    float touchedY -> i
    int partition -> j
    double[] vectorX -> k
    double[] vectorY -> l
    org.gaminganywhere.gaclient.util.Pad$PartitionEventListener partListener -> m
    boolean drawPartitionAll -> n
    int[] drawPartitionLine -> o
    java.lang.String[] drawLabelText -> p
    int[] drawLabelBetween -> q
    double[] drawLabelX -> r
    double[] drawLabelY -> s
    int colorPad -> t
    int colorPadLine -> u
    int colorHotspot -> v
    int colorText -> w
    void setPartitionEventListener(org.gaminganywhere.gaclient.util.Pad$PartitionEventListener) -> setPartitionEventListener
    void <init>(android.content.Context) -> <init>
    void setDrawPartitionAll(boolean) -> setDrawPartitionAll
    void setDrawPartitionLine(int[]) -> setDrawPartitionLine
    void setDrawLabel(int[],java.lang.String[]) -> a
    void setColorPad(int) -> setColorPad
    void setColorPadLine(int) -> setColorPadLine
    void setColorHotspot(int) -> setColorHotspot
    void setColorText(int) -> setColorText
    boolean setPartition(int) -> a
    double cross(double,double,double,double) -> a
    void getMidUnitVector(double,double,double,double,double[]) -> a
    void computeLabelPosition() -> a
    int getPartition(float,float) -> a
    boolean onTouch(android.view.MotionEvent) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
org.gaminganywhere.gaclient.util.Pad$PartitionEventListener -> org.gaminganywhere.gaclient.a.k:
    void onPartitionEvent(android.view.View,int,int) -> a
